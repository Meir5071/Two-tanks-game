class Tank {
	
	field int x, y, direction;
	static Imege tank2, tank4, tank6, tank8, white;
	
	function void init() {
		let tank8 = Imege.new(384, 960, 960, 960, 960, 960, 960, -1, -1, -1, -1, -1, -1, -1, -1, -1);
		let tank6 = Imege.new(511, 511, 511, 511, 511, 511, 32767, -1, -1, 32767, 511, 511, 511, 511, 511, 511);
		let tank2 = Imege.new(-1, -1, -1, -1, -1, -1, -1, -1, -1, 960, 960, 960, 960, 960, 960, 384);
		let tank4 = Imege.new(-128, -128, -128, -128, -128, -128, -2, -1, -1, -2, -128, -128, -128, -128, -128, -128);
		let white = Imege.new(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
		return;
	}
	
	constructor Tank new(int ax, int ay, int adirection) {
		let y = ay;
		let x = ax;
		let direction = adirection;
		do show();
		return this;
	}

	method void dispose() {
		do hide();
        do Memory.deAlloc(this);
        return;
	}
	method void show() {
		if (direction = 2) {
			do tank2.print(x, y);
		}
		if (direction = 4) {
			do tank4.print(x, y);
		}
		if (direction = 6) {
			do tank6.print(x, y);
		}
		if (direction = 8) {
			do tank8.print(x, y);
		}
		return;
	}
	method void hide() {
		do white.print(x, y);
		return;
	}
	method int get_direction() {
		return direction;
	}
	method void turn_right() {
		if (direction = 2) {
			let direction = 4;
			do show();
			return;
		}
		if (direction = 4) {
			let direction = 8;
			do show();
			return;
		}
		if (direction = 6) {
			let direction = 2;
			do show();
			return;
		}
		if (direction = 8) {
			let direction = 6;
			do show();
			return;
		}
        return;
	}
	method void turn_left() {
		if (direction = 2) {
			let direction = 6;
			do show();
			return;
		}
		if (direction = 4) {
			let direction = 2;
			do show();
			return;
		}
		if (direction = 6) {
			let direction = 8;
			do show();
			return;
		}
		if (direction = 8) {
			let direction = 4;
			do show();
			return;
		}
		return;
	}
	method void move_forward () {
		if (direction = 8) {
			if (y < 1) {
				return;
			}
			do hide();
			let y = y - 1;
			do show();
		}
		if (direction = 4) {
			if (x < 1) {
				return;
			}
			do hide();
			let x = x - 1;
			do show();
		}
		if (direction = 2) {
			if (y > 14) {
				return;
			}
			do hide();
			let y = y + 1;
			do show();
		}
		if (direction = 6) {
			if (x > 30) {
				return;
			}
			do hide();
			let x = x + 1;
			do show();
		}
        return;
	}
	method void move_backward () {
		if (direction = 8) {
			if (y > 14) {
				return;
			}
			do hide();
			let y = y + 1;
			do show();
		}
		if (direction = 4) {
			if (x > 30) {
				return;
			}
			do hide();
			let x = x + 1;
			do show();
		}
		if (direction = 2) {
			if (y < 1) {
				return;
			}
			do hide();
			let y = y - 1;
			do show();
		}
		if (direction = 6) {
			if (x < 1) {
				return;
			}
			do hide();
			let x = x - 1;
			do show();
		}
        return;
	}
	method int get_x() {
		return x;
	}
	method int get_y() {
		return y;
	}
}